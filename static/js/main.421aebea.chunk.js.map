{"version":3,"sources":["components/Home.js","App.js","reportWebVitals.js","index.js"],"names":["Home","useState","saved","localStorage","getItem","JSON","parse","displayTime","setDisplayTime","useEffect","setItem","stringify","Navbar","className","color","light","expand","NavbarBrand","href","NavbarText","onClick","Collapse","navbar","Nav","Button","arr","moment","format","slice","reverse","map","e","Toast","ToastHeader","ToastBody","App","basename","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oUA4DeA,MAtDf,WACE,MAAsCC,oBAAS,WAC7C,IAAMC,EAAQC,aAAaC,QAAQ,UAEnC,OADqBC,KAAKC,MAAMJ,IACT,MAHzB,mBAAOK,EAAP,KAAoBC,EAApB,KAmBA,OARAC,qBAAU,WACRN,aAAaO,QAAQ,SAAUL,KAAKM,UAAUJ,OAQ9C,gCACE,eAACK,EAAA,EAAD,CAAQC,UAAU,SAASC,MAAM,QAAQC,OAAK,EAACC,OAAO,KAAtD,UACE,cAACC,EAAA,EAAD,CAAaJ,UAAU,QAAQK,KAAK,IAApC,2BACA,eAACC,EAAA,EAAD,CAAYN,UAAU,QAAQO,QARnB,WACfZ,EAAe,KAOX,UACG,IADH,mBAIA,cAACa,EAAA,EAAD,CAAUC,QAAM,EAAhB,SACE,cAACC,EAAA,EAAD,CAAKV,UAAU,UAAUS,QAAM,SAGnC,sBAAKT,UAAU,UAAf,UACE,qBAAKA,UAAU,eAAf,SACE,cAACW,EAAA,EAAD,CAAQX,UAAU,UAAUC,MAAM,UAAUM,QA3BjC,WACjBZ,GAAe,SAAAiB,GAAG,4BAAQA,GAAR,CAAaC,MAASC,OAAO,+BAC/CxB,aAAaC,QAAQ,WAyBf,4BAIDG,EACEqB,MAAM,GACNC,UACAC,KAAI,SAAAC,GAAC,OACJ,4BACE,eAACC,EAAA,EAAD,CAAOnB,UAAU,GAAjB,UACE,cAACoB,EAAA,EAAD,sBACA,cAACC,EAAA,EAAD,UAAYH,mB,MCtCbI,MARf,WACE,OACE,cAAC,IAAD,CAAQC,SAAU,aAAlB,SACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWvC,OCIxBwC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.421aebea.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Button } from \"reactstrap\";\nimport { Toast, ToastBody, ToastHeader } from \"reactstrap\";\nimport { Collapse, Navbar, NavbarBrand, Nav, NavbarText } from \"reactstrap\";\nimport moment from \"moment\";\n\nfunction Home() {\n  const [displayTime, setDisplayTime] = useState(() => {\n    const saved = localStorage.getItem(\"recent\");\n    const initialValue = JSON.parse(saved);\n    return initialValue || [];\n  });\n\n  const recordTime = () => {\n    setDisplayTime(arr => [...arr, moment().format(\"MMMM Do YYYY h:mm:ss a\")]);\n    localStorage.getItem(\"recent\");\n  };\n\n  useEffect(() => {\n    localStorage.setItem(\"recent\", JSON.stringify(displayTime));\n  });\n\n  const clearLog = () => {\n    setDisplayTime([]);\n  };\n\n  return (\n    <div>\n      <Navbar className=\"NavBar\" color=\"light\" light expand=\"md\">\n        <NavbarBrand className=\"Brand\" href=\"/\"> Keeping Time</NavbarBrand>\n        <NavbarText className=\"clear\" onClick={clearLog}>\n          {\" \"}\n          Clear Storage\n        </NavbarText>\n        <Collapse navbar>\n          <Nav className=\"mr-auto\" navbar></Nav>\n        </Collapse>\n      </Navbar>\n      <div className=\"welcome\">\n        <div className=\"button-board\">\n          <Button className=\"warning\" color=\"warning\" onClick={recordTime}>\n            Log Time Now\n          </Button>\n        </div>\n        {displayTime\n          .slice(0)\n          .reverse()\n          .map(e => (\n            <p>\n              <Toast className=\"\">\n                <ToastHeader>STAMPED</ToastHeader>\n                <ToastBody>{e}</ToastBody>\n              </Toast>\n            </p>\n          ))}\n      </div>\n    </div>\n  );\n}\n\nexport default Home;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Home from \"./components/Home\";\nimport './App.css';\n\nfunction App() {\n  return (\n    <Router basename={\"/timestamp\"}>\n      <Route exact path=\"/\" component={Home}></Route>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}