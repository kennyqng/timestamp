{"version":3,"sources":["components/Home.js","App.js","reportWebVitals.js","index.js"],"names":["Home","useState","saved","localStorage","getItem","JSON","parse","displayTime","setDisplayTime","useEffect","setItem","stringify","className","onClick","Button","arr","moment","format","slice","reverse","map","e","App","basename","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oQA8CeA,MA1Cf,WACE,MAAsCC,oBAAU,WAC9C,IAAMC,EAAQC,aAAaC,QAAQ,UAEnC,OADqBC,KAAKC,MAAMJ,IACT,MAHzB,mBAAOK,EAAP,KAAoBC,EAApB,KAmBA,OARAC,qBAAW,WACTN,aAAaO,QAAQ,SAAUL,KAAKM,UAAUJ,OAQ9C,gCACE,qBAAKK,UAAU,QAAQC,QANV,WACfL,EAAe,KAKb,2BACA,sBAAKI,UAAU,UAAf,UACE,iDACA,qBAAKA,UAAU,eAAf,SACE,cAACE,EAAA,EAAD,CAAQD,QAnBG,WACjBL,GAAe,SAAAO,GAAG,4BAAQA,GAAR,CAAaC,MAASC,OAAO,+BAC/Cd,aAAaC,QAAQ,WAiBf,4BAEH,qBAAKQ,UAAU,OAAf,SACIL,EACEW,MAAM,GACNC,UACAC,KAAI,SAAAC,GAAC,OACJ,kCAAKA,iB,MCxBJC,MARf,WACE,OACE,cAAC,IAAD,CAAQC,SAAU,aAAlB,SACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAW1B,OCIxB2B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.0b861103.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Button } from \"reactstrap\";\nimport moment from \"moment\";\n\nfunction Home() {\n  const [displayTime, setDisplayTime] = useState( () => {\n    const saved = localStorage.getItem(\"recent\");\n    const initialValue = JSON.parse(saved);\n    return initialValue || [];\n  });\n  \n  const recordTime = () => {\n    setDisplayTime(arr => [...arr, moment().format(\"MMMM Do YYYY h:mm:ss a\")]);\n    localStorage.getItem(\"recent\");\n  };\n\n  useEffect (() => {\n    localStorage.setItem(\"recent\", JSON.stringify(displayTime));\n  });\n\n  const clearLog = () => {\n    setDisplayTime([]);\n  };\n\n  return (\n    <div>\n      <div className=\"clear\" onClick={clearLog}>Clear Storage</div>\n      <div className=\"welcome\">\n        <p>Kenny's Time Log</p>\n        <div className=\"button-board\">\n          <Button onClick={recordTime}>Log Time Now</Button>\n        </div>\n       <div className=\"list\">\n          {displayTime\n            .slice(0)\n            .reverse()\n            .map(e => (\n              <p> {e}</p>\n              ))\n            }\n        </div>\n      </div>\n  </div>\n  );\n}\n\nexport default Home;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Home from \"./components/Home\";\nimport './App.css';\n\nfunction App() {\n  return (\n    <Router basename={\"/timestamp\"}>\n      <Route exact path=\"/\" component={Home}></Route>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}